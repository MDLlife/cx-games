package main

import "gl"
import "glfw"

import "ccInput"
import "draw"
import "game"



func main () () {
	setupGL()
	game.Init()
	draw.Init()



	// update loop	
	for !glfw.ShouldClose("window") {
		pre()
		
		game.Update()
		draw.All()
 		
 		post()
	}
}



func setupGL() () {
	glfw.Init()
	glfw.CreateWindow("window", game.Width, game.Height, game.Name)
	glfw.MakeContextCurrent("window")
	ccInput.Init()
	gl.Init()
	gl.LinkProgram(gl.CreateProgram())
}


func pre() () { // per frame boilerplate 
	w, h := glfw.GetFramebufferSize("window")
	ratio := i32.f32(w) / i32.f32(h)

	// original sample lacked 2nd flag 
	gl.Clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT) 

	// original sample 
	// gl.UseProgram(program)
	
	gl.MatrixMode(gl.PROJECTION)
	gl.LoadIdentity()
	gl.Ortho(ratio * -1.0, ratio, -1.0, 1.0, 1.0, -1.0)
	gl.MatrixMode(gl.MODELVIEW)
}


func post() () { // per frame boilerplate 
	glfw.PollEvents()
	glfw.SwapBuffers("window")
}
