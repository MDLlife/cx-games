package main

import "gl"
import "glfw"
import "game"
import "entity"

var dubPi f32
var width i32 = 1600
var height i32 = 900



func main () () {
	dubPi = 2.0 * 3.141592654
	entity.Init()



	glfw.Init()
	glfw.CreateWindow("window", width, height, game.Name)
	glfw.MakeContextCurrent("window")
	glfw.SetKeyCallback("window", "onKeyEvent")
	
	gl.Init()
	program := gl.CreateProgram()
	gl.LinkProgram(program)


	ball = new Ball{
		radius: 0.05,
		x: 0.0,
		y: 0.0,
		vx: 0.01,
		vy: 0.01,
		gravity: 0.01
	}

	var ratio f32

	for not(glfw.ShouldClose("window")) {
		bufferWidth, bufferHeight := glfw.GetFramebufferSize("window")
		ratio = f32.div(i32.f32(bufferWidth), i32.f32(bufferHeight))

		gl.Clear(gl.COLOR_BUFFER_BIT)

		gl.UseProgram(program)
		
		gl.MatrixMode(gl.PROJECTION)
		gl.LoadIdentity()
		gl.Ortho(f32.mul(ratio, -1.0), ratio, -1.0, 1.0, 1.0, -1.0)
		gl.MatrixMode(gl.MODELVIEW)

		bounce()
		moveObjects()
		draw(ball)


		
		glfw.PollEvents()
		glfw.SwapBuffers("window")
	}
}














//game
type Ball struct {
	x f32
	y f32
	vx f32
	vy f32
	gravity f32
	radius f32
}

var ball Ball



func bounce() () {
	if ball.x + ball.radius <= -1.0 {
		ball.vx += ball.gravity
	} 

	if ball.x + ball.radius >= 1.0 {
		ball.vx -= ball.gravity
	}

	if ball.y + ball.radius <= -1.0 {
		ball.vy = f32.abs(ball.vy)
	} else {
		ball.vy -= ball.gravity
	}
}


func moveObjects() () {
	ball.x += ball.vx
	ball.y += ball.vy
}


func draw(ball Ball) () {
	for j := 0; j < 6; j++ {
		drawBall(ball, j)
	}

/*	for i := 0; i < entity.numEnts; i++ {
		drawBall(ball, j)
	}*/
}


func drawBall(ball Ball, j i32) () {
	gl.Begin(gl.POLYGON)
	gl.Color3f(1.0, 0.2, 1.0)

	for i := 0; i < 20; i++ {
		x := ball.x + ball.radius * f32.cos(i32.f32(i) * dubPi / 20.0)
		y := ball.y + ball.radius * f32.sin(i32.f32(i) * dubPi / 20.0)

		gl.Vertex2f(x + 0.2 * i32.f32(j), y)
	}

	gl.End()
}













//input
func onKeyEvent (window str, key i32, scancode i32, action i32, mods i32) () {
	if /* press */ action == 1 {
		if /* left */ key == 263 {
			ball.vx = -0.03
		}

		if /* right */ key == 262 {
			ball.vx = 0.03
		}

		//"5" key 
		if key == 53 {
			str.print("pressed 5 key")
			glfw.SetShouldClose("window", true)
		}
	} 

	if /* release */ action == 0 {
			str.print("released key")
	}
}
