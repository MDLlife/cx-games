package main

type Sprite struct {
    position Vector2D
    lastPosition Vector2D
    velocity Vector2D
    acceleration f32
    maxVelocity f32
    width f32
    height f32
    frames []i32
    currentFrame i32
    brickHit bool
}

var background Sprite
var synthCat Sprite
var yarnBall Sprite
var bricks []Sprite

func initSprites() {
    background = createBackgroundSprite()
    synthCat  = createSynthCatSprite()
    yarnBall = createYarnBallSprite()

    initBricks()
}

func initBricks() {
    var startPos Vector2D
    var increment f32
    increment = 128.0 / 1024.0
    startPos.x = -0.55
    startPos.y = -0.6

    for i:=0; i<8; i=i+1 {
        startPos.x = startPos.x + increment
        bricks = append(bricks, createBrickSprite(startPos))
    }
}

func getTexture(textureFileName str)(texture i32) {
    var workingDirectory str = os.GetWorkingDirectory()

    texture = gl.NewTexture(str.concat(workingDirectory, textureFileName))
}

func spriteTop(sprite Sprite)(out f32) {
    out = sprite.position.y + sprite.height / 2.0
}

func spriteBottom(sprite Sprite)(out f32) {
    out = sprite.position.y - sprite.height / 2.0
}

func spriteRight(sprite Sprite)(out f32) {
    out = sprite.position.x + sprite.width / 2.0
}

func spriteLeft(sprite Sprite)(out f32) {
    out = sprite.position.x - sprite.width / 2.0
}

func spriteLastTop(sprite Sprite)(out f32) {
    out = sprite.lastPosition.y + sprite.height / 2.0
}

func spriteLastBottom(sprite Sprite)(out f32) {
    out = sprite.lastPosition.y - sprite.height / 2.0
}

func spriteLastRight(sprite Sprite)(out f32) {
    out = sprite.lastPosition.x + sprite.width / 2.0
}

func spriteLastLeft(sprite Sprite)(out f32) {
    out = sprite.lastPosition.x - sprite.width / 2.0
}

func createBackgroundSprite()(background Sprite) {
    background.width = 1600.0 / 1024.0
    background.height = 1600.0 / 768.0

    background.frames = append(background.frames, getTexture("textures/background.png"))
}

func createSynthCatSprite()(synthCat Sprite) {
    synthCat.acceleration = 1.0
    synthCat.maxVelocity = 1.0
    synthCat.width = 200.0 / 1024.0
    synthCat.height = 200.0 / 768.0

    synthCat.frames = append(synthCat.frames, getTexture("textures/synth_cat.png"))
}

func createYarnBallSprite()(yarnBall Sprite) {
    yarnBall.acceleration = 1.0
    yarnBall.maxVelocity = 1.0
    yarnBall.width = 64.0 / 1024.0
    yarnBall.height = 64.0 / 768.0

    yarnBall.frames = append(yarnBall.frames, getTexture("textures/yarnBall0.png"))
    yarnBall.frames = append(yarnBall.frames, getTexture("textures/yarnBall1.png"))
    yarnBall.frames = append(yarnBall.frames, getTexture("textures/yarnBall2.png"))
    yarnBall.frames = append(yarnBall.frames, getTexture("textures/yarnBall3.png"))
}

func createBrickSprite(position Vector2D)(brick Sprite) {
    brick.position = position
    brick.width = 128.0 / 1024.0
    brick.height = 64.0 / 768.0

    brick.frames = append(brick.frames, getTexture("textures/brick.png"))
}

