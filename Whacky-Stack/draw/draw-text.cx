package draw

/*
import "gl"
import "glfw"
*/
import "gltext"



type TextInfo struct {
	Text str
	Font str
	Size f32
	Wid  f32 // caches string measure queries 
	Hei  f32
}
var texts []TextInfo

var widF f32
var heiF f32



func InitFonts() {
	file := str.concat(dir, "assets/fonts/roboto-light.ttf")
	loadFontSized(200, file)
	loadFontSized(100, file)
	loadFontSized(50,  file)
	loadFontSized(32,  file)
}


func loadFontSized(size i32, fn str) { // filename 
	s := str.concat("Roboto", sprintf("%d", size))
	
	os.Open(fn)
	gltext.LoadTrueType(s, fn, size, 32, 127, gltext.LeftToRight)
	os.Close(fn)
}


func InitMenu () {
 	printf("draw.InitMenu () \n")
	gl.DepthFunc(gl.LESS)
	widF = i32.f32(app.WIDTH)
	heiF = i32.f32(app.HEIGHT)

 	menuItem(200.0, "Play")
 	menuItem(100.0, "Sessions")
 	menuItem(50.0,  "Options")
 	menuItem(32.0,  "Quit")

	for i := 0; i < len(texts); i++ {
		font := str.concat("Roboto", sprintf("%d", f32.i32(texts[i].Size)))
		texts[i].Font = font
		
		var w i32
		var h i32
		w, h = gltext.Metrics(font, texts[i].Text)
		texts[i].Wid = i32.f32(w)
		texts[i].Hei = i32.f32(h)
		
		printf("%s ---- %d,%d ---- '%s' \n", font, w, h, texts[i].Text)
	}
}


func menuItem(size f32, text str) {
 	var ti TextInfo 
 	
 	ti = TextInfo{ Size: size, Text: text }
 	texts = append(
	texts, ti)
}


func Texts () {
	gl.Enable(gl.DEPTH_TEST)
	gl.Scalef(9.0, 9.0, 0.0)
	gl.Color4f(0.5, 0.3, 0.8, 1.0)

	var x f32
	var y f32

	//drawAllOutlinedGlText(5.0)

	for i := 0; i < len(texts); i++ {
		x = (widF - texts[i].Wid) / 2.0
		gltext.Printf(texts[i].Font, x, y, texts[i].Text)
		y = f32.sub(y, texts[i].Size)
	}

	gl.Disable(gl.DEPTH_TEST)
}


func drawAllOutlinedGlText(scale f32) {
	var alpha f32 = 1.0
	gl.Scalef(scale, scale, 0.0)

	printTextWithColor(1.0, 1.0, 0.0, 0.0, 0.0, alpha)
	printTextWithColor(-1.0, 1.0, 0.0, 0.0, 0.0, alpha)
	printTextWithColor(1.0, -1.0, 0.0, 0.0, 0.0, alpha)
	printTextWithColor(-1.0, -1.0, 0.0, 0.0, 0.0, alpha)
	printTextWithColor(0.0, 0.0, 1.0, 0.55, 0.0, alpha)
}


// x & y are offsets 
func printTextWithColor(x f32, y f32, r f32, g f32, b f32, a f32) {
	gl.Color4f(r, g, b, a)
	gltext.Printf("Roboto50", x, y, "testeeek")
}
