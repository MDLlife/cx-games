package menu



type MenuItem struct {
	Text  str
	Font  str
	Size  f32 // used for gltext init of the font 
	Wid   f32 // w/h caches the resulting string measure queries, 
	Hei   f32 // 		to get the pixel bounds of the text. 
	Hover bool // pointer is touching/hovering-over measured rect 
}
var Items [][]MenuItem // 1st is menu id, 2nd is item id 

var ShowNextShape       bool = true
var ShowNextShapeText   str  = "Show next shape: "
var StartWithDebris     bool = true
var StartWithDebrisText str  = "Start with debris: "



func Init () {
 	printf("menu.Init () \n")
 	
 	
 	var mis []MenuItem
 	
 	mis = []MenuItem{}
 	Items = append(
	Items, mis)
 	
 	mis = []MenuItem{}
 	Items = append(
	Items, mis)

 	// app.MODE_MENU_MAIN
 	makeMenuItem(0, 150.0, "Play")
 	makeMenuItem(0, 150.0, "Options")
 	makeMenuItem(0, 150.0, "Quit")
	// app.MODE_MENU_OPTIONS
 	makeMenuItem(1, 50.0, ShowNextShapeText   + "YES")
 	makeMenuItem(1, 50.0, StartWithDebrisText + "YES")
 	makeMenuItem(1, 50.0, "Debris height: _")
 	makeMenuItem(1, 50.0, "Play")
// 	makeMenuItem(1, 50.0, "<- BACK")
}


func GetClickedItem (menuId i32) (text str, id i32) {
	for i := 0; i < len(Items[menuId]); i++ {			
		if         Items[menuId][i].Hover {
			text = Items[menuId][i].Text
			id   = i
		}
	}
}


func makeMenuItem(menuId i32, size f32, text str) {
 	var mIt MenuItem 
 	mIt = MenuItem{ Size: size, Text: text }
 	Items[menuId] = append(
	Items[menuId], mIt)
}
