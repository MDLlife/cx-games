package main

import "inputs"
//import "menu"



func update () {
	respondToButtons()
	respondToKeys()
}


func respondToButtons () {
	var button i32
	var action i32
	button, action = inputs.GetButtonEvent ()
		
	if action == 0 { // release 
	} else 
	if action == 1 { // press 
		if button == 0 { // LMB 
			if app.Mode <= app.MODE_MENU_OPTIONS { // in a menu 
				respondToMenuClicks()
			}
			
			// do 
		} else
		if button == 1 { // RMB 
			// do 
		} else { // MMB or extra buttons (would be unwise to require more than 3 buttons) 
		}
	}
}


func respondToKeys () {
	var key    i32
	var action i32
	key, action = inputs.GetKeyEvent ()

	if action == glfw.Press {
		oneTimeOnly(key)
		repeaters(key)
	}else
	if action == glfw.Repeat { // (generated by keys that are held longer than ___) 
		repeaters(key)
	}else
	if action == glfw.Release {
	}
}


func oneTimeOnly (key i32) {
	if inputs.OpenedMenu(key) {
	}else{
		inputs.CloseAppOnDeveloperShortcut(key)
	}
}


func repeaters (key i32) {
	if app.Mode == app.MODE_PLAYING {
		if inputs.EventLeft(key) {
		} else
		if inputs.EventRight(key) {
		} else
		if inputs.EventUp(key) {
		} else
		if inputs.EventDown(key) {
		} else
		if inputs.EventRotateLeft(key) {
		} else
		if inputs.EventRotateRight(key) {
		}
	}
}


func respondToMenuClicks () {
}
